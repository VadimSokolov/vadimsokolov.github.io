#Read in the data
zag = read.csv("~/Downloads/zagat.csv",header=T)
#Summary of the data
summary(zag)
minv = rep(0,3) #Create vector which will hold the minimum
maxv = rep(0,3) #Create vector which will hold the maximum
zagsc = zag #Create auxiliary copy of the matrix
for(i in 1:3) {
minv[min(zag[]([](i))](i) =) #Save the minimum
maxv[max(zag[]([](i))](i) =) #Save the maximum
zagsc[(zag[]([](i))-minv[](i))/(maxv[](i)-minv[](i)]([](i)) =) #Standardize the values
}
install.packages("tensorflow")
library(tensorflow)
install_tensorflow()
library(keras)
install.packages("keras")
install_keras()
library(keras)
mnist <- dataset_mnist()
x_train <- mnist$train$x
x_train
# nn library
library(nnet)
#Fit nn with just one x=food
set.seed(99) #Seed to guarantee the same results
#Create the model
znn = nnet(price ~ food, #Formula
data = zagsc, #Data frame with the traning set
size=3, #Units in the hidden layer
decay=0.1, #Parameter for weight decay
linout=T) #Linear output
fznn = predict(znn,zagsc) #Gets the models fits for the data
plot(zagsc$food,zagsc$price) #Dispersion plot of food and price
oo = order(zagsc$food) #Get the indices that will order the column food
lines(zagsc$food[](oo),fznn[](oo),col="red",lwd=2) #Line of the fits
abline(lm(price~food,zagsc)$coef) #Compare with the OLS fit
#What does this mean? Try to interpret looking at the Neural network
summary(znn)
NeuralNetTools::plotnet(znn)
zagsc
head(zagsc)
